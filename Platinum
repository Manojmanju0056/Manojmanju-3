// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract Platinum is ERC20, Ownable {

    constructor() ERC20("PlatinumToken", "MNT") Ownable(msg.sender) {}

    function mintTokens(address recipient, uint256 amount) external onlyOwner {
        require(amount > 0, "Amount must be greater than 0 for minting");
        _mint(recipient, amount);
    }

    function burnTokens(uint256 amount) external {
        require(amount > 0, "Amount must be greater than 0 for burning");
        require(amount <= balanceOf(_msgSender()), "Insufficient balance to burn");
        _burn(_msgSender(), amount);
    }

    function transferTokens(address to, uint256 amount) public returns (bool) {
        require(amount > 0, "Amount must be greater than 0 for transfer");
        require(amount <= balanceOf(_msgSender()), "Insufficient balance for transfer");
        _transfer(_msgSender(), to, amount);
        return true;
    }
}
